2023-07-13 23:27:20,115:INFO:root:Start of the program
2023-07-13 23:27:34,128:DEBUG:root:1741590045 add Baker Street [Bakerloo]
2023-07-13 23:27:34,129:DEBUG:root:1427421955 add Regents Park [Bakerloo]
2023-07-13 23:27:34,201:DEBUG:root:9904350256 add Charing Cross [Bakerloo]
2023-07-13 23:27:34,201:DEBUG:root:25476051 add Embankment [Bakerloo]
2023-07-13 23:27:34,427:DEBUG:root:8731461097 add Edgware Road [Bakerloo]
2023-07-13 23:27:34,427:DEBUG:root:7770710708 add Marylebone [Bakerloo]
2023-07-13 23:27:34,644:DEBUG:root:6505620197 add Waterloo [Bakerloo]
2023-07-13 23:27:35,414:DEBUG:root:4033385470 add Kilburn Park [Bakerloo]
2023-07-13 23:27:35,415:DEBUG:root:1687504906 add Maida Vale [Bakerloo]
2023-07-13 23:27:35,481:DEBUG:root:7564332460 add Lambeth North [Bakerloo]
2023-07-13 23:27:35,481:DEBUG:root:5455870260 add Elephant and Castle [Bakerloo]
2023-07-13 23:27:35,752:DEBUG:root:5479703556 add Warwick Avenue [Bakerloo]
2023-07-13 23:27:36,317:DEBUG:root:4305326861 add Oxford Circus [Bakerloo]
2023-07-13 23:27:36,317:DEBUG:root:26559371 add Piccadilly Circus [Bakerloo]
2023-07-13 23:27:36,537:DEBUG:root:9385808430 add Paddington [Bakerloo]
2023-07-13 23:27:36,819:DEBUG:root:276529 add Queens Park [Bakerloo]
2023-07-13 23:27:38,108:DEBUG:root:5473273796 add Bank [Central]
2023-07-13 23:27:38,109:DEBUG:root:8868824855 add St. Pauls [Central]
2023-07-13 23:27:38,644:DEBUG:root:7049135911 add Bond Street [Central]
2023-07-13 23:27:38,644:DEBUG:root:7012714671 add Marble Arch [Central]
2023-07-13 23:27:38,938:DEBUG:root:6943758097 add Chancery Lane [Central]
2023-07-13 23:27:38,938:DEBUG:root:5466793795 add Holborn [Central]
2023-07-13 23:27:40,748:DEBUG:root:5461199778 add Tottenham Court Road [Central]
2023-07-13 23:27:41,165:DEBUG:root:366239944 add Lancaster Gate [Central]
2023-07-13 23:27:41,165:DEBUG:root:9385780171 add Queensway [Central]
2023-07-13 23:27:43,155:DEBUG:root:4305326861 add Oxford Circus [Central]
2023-07-13 23:27:43,434:DEBUG:root:5480725845 add Notting Hill Gate [Central]
2023-07-13 23:27:46,090:DEBUG:root:1741590045 add Baker Street [Circle]
2023-07-13 23:27:46,090:DEBUG:root:5473525151 add Great Portland Street [Circle]
2023-07-13 23:27:46,152:DEBUG:root:5479654175 add Barbican [Circle]
2023-07-13 23:27:46,152:DEBUG:root:8898783674 add Moorgate [Circle]
2023-07-13 23:27:46,361:DEBUG:root:26374009 add Bayswater [Circle]
2023-07-13 23:27:46,361:DEBUG:root:9385808430 add Paddington [Circle]
2023-07-13 23:27:46,571:DEBUG:root:1610858904 add Blackfriars [Circle]
2023-07-13 23:27:46,571:DEBUG:root:2533371669 add Temple [Circle]
2023-07-13 23:27:46,632:DEBUG:root:3637449663 add Cannon Street [Circle]
2023-07-13 23:27:46,632:DEBUG:root:25066784 add Mansion House [Circle]
2023-07-13 23:27:46,848:DEBUG:root:8731461097 add Edgware Road [Circle]
2023-07-13 23:27:46,911:DEBUG:root:25476051 add Embankment [Circle]
2023-07-13 23:27:46,911:DEBUG:root:1587629435 add Westminster [Circle]
2023-07-13 23:27:47,122:DEBUG:root:5473426154 add Euston Square [Circle]
2023-07-13 23:27:47,122:DEBUG:root:2428147220 add Kings Cross St. Pancras [Circle]
2023-07-13 23:27:47,332:DEBUG:root:700169540 add Farringdon [Circle]
2023-07-13 23:27:47,392:DEBUG:root:9874019022 add Gloucester Road [Circle]
2023-07-13 23:27:47,392:DEBUG:root:1291284829 add High Street Kensington [Circle]
2023-07-13 23:27:48,098:DEBUG:root:5480725845 add Notting Hill Gate [Circle]
2023-07-13 23:27:49,626:DEBUG:root:6980174342 add Royal Oak [Circle]
2023-07-13 23:27:50,047:DEBUG:root:7051934318 add Sloane Square [Circle]
2023-07-13 23:27:50,047:DEBUG:root:277336614 add South Kensington [Circle]
2023-07-13 23:27:50,313:DEBUG:root:12198505 add St. James's Park [Circle]
2023-07-13 23:27:50,313:DEBUG:root:4052472148 add Victoria [Circle]
2023-07-13 23:27:50,886:DEBUG:root:7075428513 add Westbourne Park [Circle]
2023-07-13 23:27:52,351:DEBUG:root:26374009 add Bayswater [District]
2023-07-13 23:27:52,351:DEBUG:root:9385808430 add Paddington [District]
2023-07-13 23:27:52,707:DEBUG:root:1610858904 add Blackfriars [District]
2023-07-13 23:27:52,708:DEBUG:root:2533371669 add Temple [District]
2023-07-13 23:27:53,495:DEBUG:root:3637449663 add Cannon Street [District]
2023-07-13 23:27:53,495:DEBUG:root:25066784 add Mansion House [District]
2023-07-13 23:27:54,314:DEBUG:root:7163500914 add Earls Court [District]
2023-07-13 23:27:54,315:DEBUG:root:1291284829 add High Street Kensington [District]
2023-07-13 23:27:54,630:DEBUG:root:5461690536 add West Brompton [District]
2023-07-13 23:27:55,418:DEBUG:root:25476051 add Embankment [District]
2023-07-13 23:27:55,418:DEBUG:root:1587629435 add Westminster [District]
2023-07-13 23:27:55,854:DEBUG:root:9874019022 add Gloucester Road [District]
2023-07-13 23:27:56,361:DEBUG:root:5480725845 add Notting Hill Gate [District]
2023-07-13 23:27:57,229:DEBUG:root:8731461097 add Edgware Road [District]
2023-07-13 23:27:58,172:DEBUG:root:7051934318 add Sloane Square [District]
2023-07-13 23:27:58,172:DEBUG:root:277336614 add South Kensington [District]
2023-07-13 23:27:58,670:DEBUG:root:12198505 add St. James's Park [District]
2023-07-13 23:27:58,670:DEBUG:root:4052472148 add Victoria [District]
2023-07-13 23:28:09,334:DEBUG:root:7049135911 add Bond Street [Elizabeth]
2023-07-13 23:28:09,335:DEBUG:root:9385808430 add Paddington [Elizabeth]
2023-07-13 23:28:10,590:DEBUG:root:700169540 add Farringdon [Elizabeth]
2023-07-13 23:28:10,590:DEBUG:root:5461199778 add Tottenham Court Road [Elizabeth]
2023-07-13 23:28:16,000:DEBUG:root:1741590045 add Baker Street [Hammersmith and City]
2023-07-13 23:28:16,000:DEBUG:root:5473525151 add Great Portland Street [Hammersmith and City]
2023-07-13 23:28:16,213:DEBUG:root:5479654175 add Barbican [Hammersmith and City]
2023-07-13 23:28:16,213:DEBUG:root:8898783674 add Moorgate [Hammersmith and City]
2023-07-13 23:28:16,803:DEBUG:root:8731461097 add Edgware Road [Hammersmith and City]
2023-07-13 23:28:17,042:DEBUG:root:5473426154 add Euston Square [Hammersmith and City]
2023-07-13 23:28:17,042:DEBUG:root:2428147220 add Kings Cross St. Pancras [Hammersmith and City]
2023-07-13 23:28:17,392:DEBUG:root:700169540 add Farringdon [Hammersmith and City]
2023-07-13 23:28:19,131:DEBUG:root:9385808430 add Paddington [Hammersmith and City]
2023-07-13 23:28:19,449:DEBUG:root:6980174342 add Royal Oak [Hammersmith and City]
2023-07-13 23:28:20,400:DEBUG:root:7075428513 add Westbourne Park [Hammersmith and City]
2023-07-13 23:28:20,739:DEBUG:root:1741590045 add Baker Street [Jubilee]
2023-07-13 23:28:20,739:DEBUG:root:7049135911 add Bond Street [Jubilee]
2023-07-13 23:28:21,168:DEBUG:root:6915368620 add Green Park [Jubilee]
2023-07-13 23:28:22,215:DEBUG:root:1587629435 add Westminster [Jubilee]
2023-07-13 23:28:23,475:DEBUG:root:6564822627 add St. Johns Wood [Jubilee]
2023-07-13 23:28:23,909:DEBUG:root:9383796635 add Swiss Cottage [Jubilee]
2023-07-13 23:28:23,971:DEBUG:root:6505620197 add Waterloo [Jubilee]
2023-07-13 23:28:23,971:DEBUG:root:5361364375 add Southwark [Jubilee]
2023-07-13 23:28:25,232:DEBUG:root:5479654175 add Barbican [Metropolitan]
2023-07-13 23:28:25,232:DEBUG:root:700169540 add Farringdon [Metropolitan]
2023-07-13 23:28:26,238:DEBUG:root:5473426154 add Euston Square [Metropolitan]
2023-07-13 23:28:26,238:DEBUG:root:5473525151 add Great Portland Street [Metropolitan]
2023-07-13 23:28:26,469:DEBUG:root:2428147220 add Kings Cross St. Pancras [Metropolitan]
2023-07-13 23:28:26,744:DEBUG:root:1741590045 add Baker Street [Metropolitan]
2023-07-13 23:28:28,237:DEBUG:root:8898783674 add Moorgate [Metropolitan]
2023-07-13 23:28:30,053:DEBUG:root:8987955803 add Angel [Northern]
2023-07-13 23:28:30,053:DEBUG:root:2428147220 add Kings Cross St. Pancras [Northern]
2023-07-13 23:28:30,549:DEBUG:root:5473273796 add Bank [Northern]
2023-07-13 23:28:30,549:DEBUG:root:8898783674 add Moorgate [Northern]
2023-07-13 23:28:31,500:DEBUG:root:1782971979 add Camden Town [Northern]
2023-07-13 23:28:31,500:DEBUG:root:6467180630 add Chalk Farm [Northern]
2023-07-13 23:28:32,033:DEBUG:root:9904350256 add Charing Cross [Northern]
2023-07-13 23:28:32,033:DEBUG:root:5479635739 add Leicester Square [Northern]
2023-07-13 23:28:33,304:DEBUG:root:5455870260 add Elephant and Castle [Northern]
2023-07-13 23:28:33,304:DEBUG:root:1155200706 add Borough [Northern]
2023-07-13 23:28:33,367:DEBUG:root:25476051 add Embankment [Northern]
2023-07-13 23:28:33,584:DEBUG:root:1264708174 add Euston [Northern]
2023-07-13 23:28:33,797:DEBUG:root:2344320142 add Mornington Crescent [Northern]
2023-07-13 23:28:34,147:DEBUG:root:7021671308 add Goodge Street [Northern]
2023-07-13 23:28:34,147:DEBUG:root:2833955781 add Warren Street [Northern]
2023-07-13 23:28:34,842:DEBUG:root:10181017921 add Kennington [Northern]
2023-07-13 23:28:35,109:DEBUG:root:6505620197 add Waterloo [Northern]
2023-07-13 23:28:35,589:DEBUG:root:5461199778 add Tottenham Court Road [Northern]
2023-07-13 23:28:36,013:DEBUG:root:1694591742 add Old Street [Northern]
2023-07-13 23:28:40,673:DEBUG:root:10790335380 add Camden Road [Overground]
2023-07-13 23:28:40,673:DEBUG:root:2086131577 add Caledonian Road and Barnsbury [Overground]
2023-07-13 23:28:47,373:DEBUG:root:1692927619 add Kilburn High Road [Overground]
2023-07-13 23:28:47,373:DEBUG:root:620076633 add South Hampstead [Overground]
2023-07-13 23:28:48,917:DEBUG:root:276529 add Queens Park [Overground]
2023-07-13 23:28:51,004:DEBUG:root:1264708174 add Euston [Overground]
2023-07-13 23:28:58,066:DEBUG:root:25544135 add Covent Garden [Piccadilly]
2023-07-13 23:28:58,067:DEBUG:root:5479635739 add Leicester Square [Piccadilly]
2023-07-13 23:28:58,843:DEBUG:root:9874019022 add Gloucester Road [Piccadilly]
2023-07-13 23:28:58,843:DEBUG:root:7163500914 add Earls Court [Piccadilly]
2023-07-13 23:28:59,058:DEBUG:root:6915368620 add Green Park [Piccadilly]
2023-07-13 23:28:59,058:DEBUG:root:135772063 add Hyde Park Corner [Piccadilly]
2023-07-13 23:29:00,274:DEBUG:root:5466793795 add Holborn [Piccadilly]
2023-07-13 23:29:01,071:DEBUG:root:5475500034 add Knightsbridge [Piccadilly]
2023-07-13 23:29:01,357:DEBUG:root:2428147220 add Kings Cross St. Pancras [Piccadilly]
2023-07-13 23:29:01,357:DEBUG:root:1843348265 add Russell Square [Piccadilly]
2023-07-13 23:29:01,581:DEBUG:root:277336614 add South Kensington [Piccadilly]
2023-07-13 23:29:01,648:DEBUG:root:26559371 add Piccadilly Circus [Piccadilly]
2023-07-13 23:29:05,244:DEBUG:root:1264708174 add Euston [Victoria]
2023-07-13 23:29:05,244:DEBUG:root:2833955781 add Warren Street [Victoria]
2023-07-13 23:29:05,771:DEBUG:root:6915368620 add Green Park [Victoria]
2023-07-13 23:29:05,772:DEBUG:root:4052472148 add Victoria [Victoria]
2023-07-13 23:29:06,075:DEBUG:root:2428147220 add Kings Cross St. Pancras [Victoria]
2023-07-13 23:29:06,314:DEBUG:root:4305326861 add Oxford Circus [Victoria]
2023-07-13 23:29:06,382:DEBUG:root:1287703214 add Pimlico [Victoria]
2023-07-13 23:29:06,382:DEBUG:root:926239878 add Vauxhall [Victoria]
2023-07-13 23:29:07,775:DEBUG:root:6505620197 add Waterloo [Waterloo and City]
2023-07-13 23:29:07,775:DEBUG:root:5473273796 add Bank [Waterloo and City]
2023-07-13 23:29:07,783:DEBUG:root:added node Baker Street [Bakerloo]: {'x': -0.1570967, 'y': 51.5232224, 'type': 'tube_station'}
2023-07-13 23:29:07,783:DEBUG:root:entrance added: 1741590045 -> Baker Street [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,783:DEBUG:root:added node Baker Street [Circle]: {'x': -0.1570967, 'y': 51.5232224, 'type': 'tube_station'}
2023-07-13 23:29:07,783:DEBUG:root:entrance added: 1741590045 -> Baker Street [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,783:DEBUG:root:added node Baker Street [Hammersmith and City]: {'x': -0.1570967, 'y': 51.5232224, 'type': 'tube_station'}
2023-07-13 23:29:07,783:DEBUG:root:entrance added: 1741590045 -> Baker Street [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,783:DEBUG:root:added node Baker Street [Jubilee]: {'x': -0.1570967, 'y': 51.5232224, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 1741590045 -> Baker Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Baker Street [Metropolitan]: {'x': -0.1570967, 'y': 51.5232224, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 1741590045 -> Baker Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Bakerloo] -> Baker Street [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Bakerloo] -> Baker Street [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Bakerloo] -> Baker Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Bakerloo] -> Baker Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Circle] -> Baker Street [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Circle] -> Baker Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Circle] -> Baker Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Hammersmith and City] -> Baker Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Hammersmith and City] -> Baker Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Baker Street [Jubilee] -> Baker Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:added node Regents Park [Bakerloo]: {'x': -0.1454191, 'y': 51.5238724, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 1427421955 -> Regents Park [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Charing Cross [Bakerloo]: {'x': -0.1249597, 'y': 51.5083916, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 9904350256 -> Charing Cross [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Charing Cross [Northern]: {'x': -0.1249597, 'y': 51.5083916, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 9904350256 -> Charing Cross [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Charing Cross [Bakerloo] -> Charing Cross [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:added node Embankment [Bakerloo]: {'x': -0.1226925, 'y': 51.5073162, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 25476051 -> Embankment [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Embankment [Circle]: {'x': -0.1226925, 'y': 51.5073162, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 25476051 -> Embankment [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Embankment [District]: {'x': -0.1226925, 'y': 51.5073162, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 25476051 -> Embankment [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Embankment [Northern]: {'x': -0.1226925, 'y': 51.5073162, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 25476051 -> Embankment [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Embankment [Bakerloo] -> Embankment [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Embankment [Bakerloo] -> Embankment [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Embankment [Bakerloo] -> Embankment [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Embankment [Circle] -> Embankment [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Embankment [Circle] -> Embankment [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Embankment [District] -> Embankment [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:added node Edgware Road [Bakerloo]: {'x': -0.1675935, 'y': 51.5199669, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 8731461097 -> Edgware Road [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Edgware Road [Circle]: {'x': -0.1675935, 'y': 51.5199669, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 8731461097 -> Edgware Road [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Edgware Road [District]: {'x': -0.1675935, 'y': 51.5199669, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 8731461097 -> Edgware Road [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:added node Edgware Road [Hammersmith and City]: {'x': -0.1675935, 'y': 51.5199669, 'type': 'tube_station'}
2023-07-13 23:29:07,784:DEBUG:root:entrance added: 8731461097 -> Edgware Road [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Edgware Road [Bakerloo] -> Edgware Road [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Edgware Road [Bakerloo] -> Edgware Road [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Edgware Road [Bakerloo] -> Edgware Road [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Edgware Road [Circle] -> Edgware Road [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,784:DEBUG:root:transfer added: Edgware Road [Circle] -> Edgware Road [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Edgware Road [District] -> Edgware Road [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:added node Marylebone [Bakerloo]: {'x': -0.1634073, 'y': 51.5224292, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 7770710708 -> Marylebone [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Waterloo [Bakerloo]: {'x': -0.1132093, 'y': 51.5033738, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 6505620197 -> Waterloo [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Waterloo [Jubilee]: {'x': -0.1132093, 'y': 51.5033738, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 6505620197 -> Waterloo [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Waterloo [Northern]: {'x': -0.1132093, 'y': 51.5033738, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 6505620197 -> Waterloo [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Waterloo [Waterloo and City]: {'x': -0.1132093, 'y': 51.5033738, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 6505620197 -> Waterloo [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Waterloo [Bakerloo] -> Waterloo [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Waterloo [Bakerloo] -> Waterloo [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Waterloo [Bakerloo] -> Waterloo [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Waterloo [Jubilee] -> Waterloo [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Waterloo [Jubilee] -> Waterloo [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Waterloo [Northern] -> Waterloo [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:added node Kilburn Park [Bakerloo]: {'x': -0.1937163, 'y': 51.5352274, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 4033385470 -> Kilburn Park [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Maida Vale [Bakerloo]: {'x': -0.1851227, 'y': 51.5302806, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 1687504906 -> Maida Vale [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Lambeth North [Bakerloo]: {'x': -0.1118809, 'y': 51.4993751, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 7564332460 -> Lambeth North [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Elephant and Castle [Bakerloo]: {'x': -0.1007472, 'y': 51.4958622, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 5455870260 -> Elephant and Castle [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Elephant and Castle [Northern]: {'x': -0.1007472, 'y': 51.4958622, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 5455870260 -> Elephant and Castle [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Elephant and Castle [Bakerloo] -> Elephant and Castle [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:added node Warwick Avenue [Bakerloo]: {'x': -0.1832546, 'y': 51.5230617, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 5479703556 -> Warwick Avenue [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Oxford Circus [Bakerloo]: {'x': -0.1410037, 'y': 51.5152582, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 4305326861 -> Oxford Circus [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Oxford Circus [Central]: {'x': -0.1410037, 'y': 51.5152582, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 4305326861 -> Oxford Circus [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Oxford Circus [Victoria]: {'x': -0.1410037, 'y': 51.5152582, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 4305326861 -> Oxford Circus [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Oxford Circus [Bakerloo] -> Oxford Circus [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Oxford Circus [Bakerloo] -> Oxford Circus [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Oxford Circus [Central] -> Oxford Circus [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,785:DEBUG:root:added node Piccadilly Circus [Bakerloo]: {'x': -0.1335766, 'y': 51.5094679, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 26559371 -> Piccadilly Circus [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:added node Piccadilly Circus [Piccadilly]: {'x': -0.1335766, 'y': 51.5094679, 'type': 'tube_station'}
2023-07-13 23:29:07,785:DEBUG:root:entrance added: 26559371 -> Piccadilly Circus [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,785:DEBUG:root:transfer added: Piccadilly Circus [Bakerloo] -> Piccadilly Circus [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node Paddington [Bakerloo]: {'x': -0.1756612, 'y': 51.5154819, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 9385808430 -> Paddington [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Paddington [Circle]: {'x': -0.1756612, 'y': 51.5154819, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 9385808430 -> Paddington [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Paddington [District]: {'x': -0.1756612, 'y': 51.5154819, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 9385808430 -> Paddington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Paddington [Elizabeth]: {'x': -0.1756612, 'y': 51.5154819, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 9385808430 -> Paddington [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Paddington [Hammersmith and City]: {'x': -0.1756612, 'y': 51.5154819, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 9385808430 -> Paddington [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Bakerloo] -> Paddington [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Bakerloo] -> Paddington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Bakerloo] -> Paddington [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Bakerloo] -> Paddington [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Circle] -> Paddington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Circle] -> Paddington [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Circle] -> Paddington [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [District] -> Paddington [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [District] -> Paddington [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Paddington [Elizabeth] -> Paddington [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node Queens Park [Bakerloo]: {'x': -0.2046959, 'y': 51.5346313, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 276529 -> Queens Park [Bakerloo] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Queens Park [Overground]: {'x': -0.2046959, 'y': 51.5346313, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 276529 -> Queens Park [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Queens Park [Bakerloo] -> Queens Park [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node Bank [Central]: {'x': -0.0889631, 'y': 51.5133579, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5473273796 -> Bank [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Bank [Northern]: {'x': -0.0889631, 'y': 51.5133579, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5473273796 -> Bank [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Bank [Waterloo and City]: {'x': -0.0889631, 'y': 51.5133579, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5473273796 -> Bank [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Bank [Central] -> Bank [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Bank [Central] -> Bank [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Bank [Northern] -> Bank [Waterloo and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node St. Pauls [Central]: {'x': -0.0976613, 'y': 51.5147847, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 8868824855 -> St. Pauls [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Bond Street [Central]: {'x': -0.149367, 'y': 51.5139551, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 7049135911 -> Bond Street [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Bond Street [Elizabeth]: {'x': -0.149367, 'y': 51.5139551, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 7049135911 -> Bond Street [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Bond Street [Jubilee]: {'x': -0.149367, 'y': 51.5139551, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 7049135911 -> Bond Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Bond Street [Central] -> Bond Street [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Bond Street [Central] -> Bond Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Bond Street [Elizabeth] -> Bond Street [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node Marble Arch [Central]: {'x': -0.1581277, 'y': 51.5143112, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 7012714671 -> Marble Arch [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Chancery Lane [Central]: {'x': -0.1117278, 'y': 51.518753, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 6943758097 -> Chancery Lane [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Holborn [Central]: {'x': -0.1199159, 'y': 51.5173, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5466793795 -> Holborn [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Holborn [Piccadilly]: {'x': -0.1199159, 'y': 51.5173, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5466793795 -> Holborn [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Holborn [Central] -> Holborn [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node Tottenham Court Road [Central]: {'x': -0.1311473, 'y': 51.5162798, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5461199778 -> Tottenham Court Road [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Tottenham Court Road [Elizabeth]: {'x': -0.1311473, 'y': 51.5162798, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5461199778 -> Tottenham Court Road [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Tottenham Court Road [Northern]: {'x': -0.1311473, 'y': 51.5162798, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 5461199778 -> Tottenham Court Road [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Tottenham Court Road [Central] -> Tottenham Court Road [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Tottenham Court Road [Central] -> Tottenham Court Road [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:transfer added: Tottenham Court Road [Elizabeth] -> Tottenham Court Road [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,786:DEBUG:root:added node Lancaster Gate [Central]: {'x': -0.1755893, 'y': 51.5116457, 'type': 'tube_station'}
2023-07-13 23:29:07,786:DEBUG:root:entrance added: 366239944 -> Lancaster Gate [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,786:DEBUG:root:added node Queensway [Central]: {'x': -0.1871983, 'y': 51.5103513, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 9385780171 -> Queensway [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Notting Hill Gate [Central]: {'x': -0.1960886, 'y': 51.5092529, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5480725845 -> Notting Hill Gate [Central] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Notting Hill Gate [Circle]: {'x': -0.1960886, 'y': 51.5092529, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5480725845 -> Notting Hill Gate [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Notting Hill Gate [District]: {'x': -0.1960886, 'y': 51.5092529, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5480725845 -> Notting Hill Gate [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Notting Hill Gate [Central] -> Notting Hill Gate [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Notting Hill Gate [Central] -> Notting Hill Gate [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Notting Hill Gate [Circle] -> Notting Hill Gate [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Great Portland Street [Circle]: {'x': -0.1440107, 'y': 51.5237818, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5473525151 -> Great Portland Street [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Great Portland Street [Hammersmith and City]: {'x': -0.1440107, 'y': 51.5237818, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5473525151 -> Great Portland Street [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Great Portland Street [Metropolitan]: {'x': -0.1440107, 'y': 51.5237818, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5473525151 -> Great Portland Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Great Portland Street [Circle] -> Great Portland Street [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Great Portland Street [Circle] -> Great Portland Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Great Portland Street [Hammersmith and City] -> Great Portland Street [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Barbican [Circle]: {'x': -0.0976568, 'y': 51.5202125, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5479654175 -> Barbican [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Barbican [Hammersmith and City]: {'x': -0.0976568, 'y': 51.5202125, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5479654175 -> Barbican [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Barbican [Metropolitan]: {'x': -0.0976568, 'y': 51.5202125, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 5479654175 -> Barbican [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Barbican [Circle] -> Barbican [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Barbican [Circle] -> Barbican [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Barbican [Hammersmith and City] -> Barbican [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Moorgate [Circle]: {'x': -0.0887998, 'y': 51.5182571, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 8898783674 -> Moorgate [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Moorgate [Hammersmith and City]: {'x': -0.0887998, 'y': 51.5182571, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 8898783674 -> Moorgate [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Moorgate [Metropolitan]: {'x': -0.0887998, 'y': 51.5182571, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 8898783674 -> Moorgate [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Moorgate [Northern]: {'x': -0.0887998, 'y': 51.5182571, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 8898783674 -> Moorgate [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Moorgate [Circle] -> Moorgate [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Moorgate [Circle] -> Moorgate [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Moorgate [Circle] -> Moorgate [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Moorgate [Hammersmith and City] -> Moorgate [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Moorgate [Hammersmith and City] -> Moorgate [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Moorgate [Metropolitan] -> Moorgate [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Bayswater [Circle]: {'x': -0.1875091, 'y': 51.512127, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 26374009 -> Bayswater [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Bayswater [District]: {'x': -0.1875091, 'y': 51.512127, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 26374009 -> Bayswater [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Bayswater [Circle] -> Bayswater [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Blackfriars [Circle]: {'x': -0.1030697, 'y': 51.5116791, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 1610858904 -> Blackfriars [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Blackfriars [District]: {'x': -0.1030697, 'y': 51.5116791, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 1610858904 -> Blackfriars [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Blackfriars [Circle] -> Blackfriars [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Temple [Circle]: {'x': -0.1137394, 'y': 51.5111613, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 2533371669 -> Temple [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Temple [District]: {'x': -0.1137394, 'y': 51.5111613, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 2533371669 -> Temple [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Temple [Circle] -> Temple [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Cannon Street [Circle]: {'x': -0.0902439, 'y': 51.5112919, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 3637449663 -> Cannon Street [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Cannon Street [District]: {'x': -0.0902439, 'y': 51.5112919, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 3637449663 -> Cannon Street [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:transfer added: Cannon Street [Circle] -> Cannon Street [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,787:DEBUG:root:added node Mansion House [Circle]: {'x': -0.094401, 'y': 51.5120034, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 25066784 -> Mansion House [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,787:DEBUG:root:added node Mansion House [District]: {'x': -0.094401, 'y': 51.5120034, 'type': 'tube_station'}
2023-07-13 23:29:07,787:DEBUG:root:entrance added: 25066784 -> Mansion House [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Mansion House [Circle] -> Mansion House [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:added node Westminster [Circle]: {'x': -0.1248756, 'y': 51.5012044, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 1587629435 -> Westminster [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Westminster [District]: {'x': -0.1248756, 'y': 51.5012044, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 1587629435 -> Westminster [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Westminster [Jubilee]: {'x': -0.1248756, 'y': 51.5012044, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 1587629435 -> Westminster [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Westminster [Circle] -> Westminster [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Westminster [Circle] -> Westminster [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Westminster [District] -> Westminster [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:added node Euston Square [Circle]: {'x': -0.1355454, 'y': 51.5254598, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 5473426154 -> Euston Square [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Euston Square [Hammersmith and City]: {'x': -0.1355454, 'y': 51.5254598, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 5473426154 -> Euston Square [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Euston Square [Metropolitan]: {'x': -0.1355454, 'y': 51.5254598, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 5473426154 -> Euston Square [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Euston Square [Circle] -> Euston Square [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Euston Square [Circle] -> Euston Square [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Euston Square [Hammersmith and City] -> Euston Square [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:added node Kings Cross St. Pancras [Circle]: {'x': -0.1239141, 'y': 51.5302886, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 2428147220 -> Kings Cross St. Pancras [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Kings Cross St. Pancras [Hammersmith and City]: {'x': -0.1239141, 'y': 51.5302886, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 2428147220 -> Kings Cross St. Pancras [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Kings Cross St. Pancras [Metropolitan]: {'x': -0.1239141, 'y': 51.5302886, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 2428147220 -> Kings Cross St. Pancras [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Kings Cross St. Pancras [Northern]: {'x': -0.1239141, 'y': 51.5302886, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 2428147220 -> Kings Cross St. Pancras [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Kings Cross St. Pancras [Piccadilly]: {'x': -0.1239141, 'y': 51.5302886, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 2428147220 -> Kings Cross St. Pancras [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Kings Cross St. Pancras [Victoria]: {'x': -0.1239141, 'y': 51.5302886, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 2428147220 -> Kings Cross St. Pancras [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Circle] -> Kings Cross St. Pancras [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Circle] -> Kings Cross St. Pancras [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Circle] -> Kings Cross St. Pancras [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Circle] -> Kings Cross St. Pancras [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Circle] -> Kings Cross St. Pancras [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Hammersmith and City] -> Kings Cross St. Pancras [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Hammersmith and City] -> Kings Cross St. Pancras [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Hammersmith and City] -> Kings Cross St. Pancras [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Hammersmith and City] -> Kings Cross St. Pancras [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Metropolitan] -> Kings Cross St. Pancras [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Metropolitan] -> Kings Cross St. Pancras [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Metropolitan] -> Kings Cross St. Pancras [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Northern] -> Kings Cross St. Pancras [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Northern] -> Kings Cross St. Pancras [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Kings Cross St. Pancras [Piccadilly] -> Kings Cross St. Pancras [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:added node Farringdon [Circle]: {'x': -0.104853, 'y': 51.5202582, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 700169540 -> Farringdon [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Farringdon [Elizabeth]: {'x': -0.104853, 'y': 51.5202582, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 700169540 -> Farringdon [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Farringdon [Hammersmith and City]: {'x': -0.104853, 'y': 51.5202582, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 700169540 -> Farringdon [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Farringdon [Metropolitan]: {'x': -0.104853, 'y': 51.5202582, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 700169540 -> Farringdon [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Farringdon [Circle] -> Farringdon [Elizabeth] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Farringdon [Circle] -> Farringdon [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Farringdon [Circle] -> Farringdon [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Farringdon [Elizabeth] -> Farringdon [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Farringdon [Elizabeth] -> Farringdon [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:transfer added: Farringdon [Hammersmith and City] -> Farringdon [Metropolitan] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,788:DEBUG:root:added node Gloucester Road [Circle]: {'x': -0.1835116, 'y': 51.4946994, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 9874019022 -> Gloucester Road [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Gloucester Road [District]: {'x': -0.1835116, 'y': 51.4946994, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 9874019022 -> Gloucester Road [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,788:DEBUG:root:added node Gloucester Road [Piccadilly]: {'x': -0.1835116, 'y': 51.4946994, 'type': 'tube_station'}
2023-07-13 23:29:07,788:DEBUG:root:entrance added: 9874019022 -> Gloucester Road [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Gloucester Road [Circle] -> Gloucester Road [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Gloucester Road [Circle] -> Gloucester Road [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Gloucester Road [District] -> Gloucester Road [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node High Street Kensington [Circle]: {'x': -0.1916301, 'y': 51.5003692, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 1291284829 -> High Street Kensington [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node High Street Kensington [District]: {'x': -0.1916301, 'y': 51.5003692, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 1291284829 -> High Street Kensington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: High Street Kensington [Circle] -> High Street Kensington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node Royal Oak [Circle]: {'x': -0.1890361, 'y': 51.5181666, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 6980174342 -> Royal Oak [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Royal Oak [Hammersmith and City]: {'x': -0.1890361, 'y': 51.5181666, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 6980174342 -> Royal Oak [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Royal Oak [Circle] -> Royal Oak [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node Sloane Square [Circle]: {'x': -0.1562989, 'y': 51.4923229, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 7051934318 -> Sloane Square [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Sloane Square [District]: {'x': -0.1562989, 'y': 51.4923229, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 7051934318 -> Sloane Square [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Sloane Square [Circle] -> Sloane Square [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node South Kensington [Circle]: {'x': -0.1739844, 'y': 51.4941417, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 277336614 -> South Kensington [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node South Kensington [District]: {'x': -0.1739844, 'y': 51.4941417, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 277336614 -> South Kensington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node South Kensington [Piccadilly]: {'x': -0.1739844, 'y': 51.4941417, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 277336614 -> South Kensington [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: South Kensington [Circle] -> South Kensington [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: South Kensington [Circle] -> South Kensington [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: South Kensington [District] -> South Kensington [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node St. James's Park [Circle]: {'x': -0.1338377, 'y': 51.499721, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 12198505 -> St. James's Park [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node St. James's Park [District]: {'x': -0.1338377, 'y': 51.499721, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 12198505 -> St. James's Park [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: St. James's Park [Circle] -> St. James's Park [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node Victoria [Circle]: {'x': -0.1438612, 'y': 51.4964382, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 4052472148 -> Victoria [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Victoria [District]: {'x': -0.1438612, 'y': 51.4964382, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 4052472148 -> Victoria [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Victoria [Victoria]: {'x': -0.1438612, 'y': 51.4964382, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 4052472148 -> Victoria [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Victoria [Circle] -> Victoria [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Victoria [Circle] -> Victoria [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Victoria [District] -> Victoria [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node Westbourne Park [Circle]: {'x': -0.2010388, 'y': 51.5206856, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 7075428513 -> Westbourne Park [Circle] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Westbourne Park [Hammersmith and City]: {'x': -0.2010388, 'y': 51.5206856, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 7075428513 -> Westbourne Park [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Westbourne Park [Circle] -> Westbourne Park [Hammersmith and City] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node Earls Court [District]: {'x': -0.1942391, 'y': 51.491368, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 7163500914 -> Earls Court [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Earls Court [Piccadilly]: {'x': -0.1942391, 'y': 51.491368, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 7163500914 -> Earls Court [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Earls Court [District] -> Earls Court [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node West Brompton [District]: {'x': -0.1955359, 'y': 51.4873167, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 5461690536 -> West Brompton [District] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Green Park [Jubilee]: {'x': -0.1423664, 'y': 51.5068622, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 6915368620 -> Green Park [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Green Park [Piccadilly]: {'x': -0.1423664, 'y': 51.5068622, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 6915368620 -> Green Park [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Green Park [Victoria]: {'x': -0.1423664, 'y': 51.5068622, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 6915368620 -> Green Park [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Green Park [Jubilee] -> Green Park [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Green Park [Jubilee] -> Green Park [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:transfer added: Green Park [Piccadilly] -> Green Park [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,789:DEBUG:root:added node St. Johns Wood [Jubilee]: {'x': -0.1741871, 'y': 51.5349046, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 6564822627 -> St. Johns Wood [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Swiss Cottage [Jubilee]: {'x': -0.1759527, 'y': 51.5428312, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 9383796635 -> Swiss Cottage [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Southwark [Jubilee]: {'x': -0.105739, 'y': 51.5040625, 'type': 'tube_station'}
2023-07-13 23:29:07,789:DEBUG:root:entrance added: 5361364375 -> Southwark [Jubilee] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,789:DEBUG:root:added node Angel [Northern]: {'x': -0.1056978, 'y': 51.5332121, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 8987955803 -> Angel [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Camden Town [Northern]: {'x': -0.1424264, 'y': 51.5403089, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1782971979 -> Camden Town [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Chalk Farm [Northern]: {'x': -0.1535642, 'y': 51.5441941, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 6467180630 -> Chalk Farm [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Leicester Square [Northern]: {'x': -0.1282222, 'y': 51.5112756, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 5479635739 -> Leicester Square [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Leicester Square [Piccadilly]: {'x': -0.1282222, 'y': 51.5112756, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 5479635739 -> Leicester Square [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:transfer added: Leicester Square [Northern] -> Leicester Square [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,790:DEBUG:root:added node Borough [Northern]: {'x': -0.0943759, 'y': 51.5010259, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1155200706 -> Borough [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Euston [Northern]: {'x': -0.1333748, 'y': 51.5287489, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1264708174 -> Euston [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Euston [Overground]: {'x': -0.1333748, 'y': 51.5287489, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1264708174 -> Euston [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Euston [Victoria]: {'x': -0.1333748, 'y': 51.5287489, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1264708174 -> Euston [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:transfer added: Euston [Northern] -> Euston [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,790:DEBUG:root:transfer added: Euston [Northern] -> Euston [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,790:DEBUG:root:transfer added: Euston [Overground] -> Euston [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,790:DEBUG:root:added node Mornington Crescent [Northern]: {'x': -0.1384979, 'y': 51.5343712, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 2344320142 -> Mornington Crescent [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Goodge Street [Northern]: {'x': -0.1348237, 'y': 51.5207327, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 7021671308 -> Goodge Street [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Warren Street [Northern]: {'x': -0.1382791, 'y': 51.5248769, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 2833955781 -> Warren Street [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Warren Street [Victoria]: {'x': -0.1382791, 'y': 51.5248769, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 2833955781 -> Warren Street [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:transfer added: Warren Street [Northern] -> Warren Street [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'transfer'}
2023-07-13 23:29:07,790:DEBUG:root:added node Kennington [Northern]: {'x': -0.1048327, 'y': 51.4884315, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 10181017921 -> Kennington [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Old Street [Northern]: {'x': -0.087528, 'y': 51.5256175, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1694591742 -> Old Street [Northern] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Camden Road [Overground]: {'x': -0.1390688, 'y': 51.5418085, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 10790335380 -> Camden Road [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Caledonian Road and Barnsbury [Overground]: {'x': -0.1151852, 'y': 51.5433451, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 2086131577 -> Caledonian Road and Barnsbury [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Kilburn High Road [Overground]: {'x': -0.1914759, 'y': 51.5371974, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1692927619 -> Kilburn High Road [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node South Hampstead [Overground]: {'x': -0.1782591, 'y': 51.5416197, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 620076633 -> South Hampstead [Overground] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Covent Garden [Piccadilly]: {'x': -0.1247948, 'y': 51.5128625, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 25544135 -> Covent Garden [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Hyde Park Corner [Piccadilly]: {'x': -0.1523179, 'y': 51.5027606, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 135772063 -> Hyde Park Corner [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Knightsbridge [Piccadilly]: {'x': -0.1610191, 'y': 51.5014033, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 5475500034 -> Knightsbridge [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Russell Square [Piccadilly]: {'x': -0.1246653, 'y': 51.522784, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1843348265 -> Russell Square [Piccadilly] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Pimlico [Victoria]: {'x': -0.1331143, 'y': 51.4898588, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 1287703214 -> Pimlico [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,790:DEBUG:root:added node Vauxhall [Victoria]: {'x': -0.1237984, 'y': 51.4859385, 'type': 'tube_station'}
2023-07-13 23:29:07,790:DEBUG:root:entrance added: 926239878 -> Vauxhall [Victoria] {'length': 0, 'time': 180, 'time_young': 180, 'time_old': 180, 'type': 'entrance'}
2023-07-13 23:29:07,794:DEBUG:root:connecting: Baker Street [Bakerloo] to Regents Park [Bakerloo]
2023-07-13 23:29:07,794:DEBUG:root:connecting: Charing Cross [Bakerloo] to Embankment [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Edgware Road [Bakerloo] to Marylebone [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Embankment [Bakerloo] to Waterloo [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Kilburn Park [Bakerloo] to Maida Vale [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Lambeth North [Bakerloo] to Elephant and Castle [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Maida Vale [Bakerloo] to Warwick Avenue [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Marylebone [Bakerloo] to Baker Street [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Oxford Circus [Bakerloo] to Piccadilly Circus [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Paddington [Bakerloo] to Edgware Road [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Piccadilly Circus [Bakerloo] to Charing Cross [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Queens Park [Bakerloo] to Kilburn Park [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Regents Park [Bakerloo] to Oxford Circus [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Warwick Avenue [Bakerloo] to Paddington [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Waterloo [Bakerloo] to Lambeth North [Bakerloo]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Bank [Central] to St. Pauls [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Bond Street [Central] to Marble Arch [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Chancery Lane [Central] to Holborn [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Holborn [Central] to Tottenham Court Road [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Lancaster Gate [Central] to Queensway [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Marble Arch [Central] to Lancaster Gate [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Oxford Circus [Central] to Bond Street [Central]
2023-07-13 23:29:07,795:DEBUG:root:connecting: Queensway [Central] to Notting Hill Gate [Central]
2023-07-13 23:29:07,796:DEBUG:root:connecting: St. Pauls [Central] to Chancery Lane [Central]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Tottenham Court Road [Central] to Oxford Circus [Central]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Baker Street [Circle] to Great Portland Street [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Barbican [Circle] to Moorgate [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Bayswater [Circle] to Paddington [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Blackfriars [Circle] to Temple [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Cannon Street [Circle] to Mansion House [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Edgware Road [Circle] to Baker Street [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Embankment [Circle] to Westminster [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Euston Square [Circle] to Kings Cross St. Pancras [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Farringdon [Circle] to Barbican [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Gloucester Road [Circle] to High Street Kensington [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Great Portland Street [Circle] to Euston Square [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: High Street Kensington [Circle] to Notting Hill Gate [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Kings Cross St. Pancras [Circle] to Farringdon [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Mansion House [Circle] to Blackfriars [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Notting Hill Gate [Circle] to Bayswater [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Paddington [Circle] to Edgware Road [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Royal Oak [Circle] to Paddington [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Sloane Square [Circle] to South Kensington [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: South Kensington [Circle] to Gloucester Road [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: St. James's Park [Circle] to Victoria [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Temple [Circle] to Embankment [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Victoria [Circle] to Sloane Square [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Westbourne Park [Circle] to Royal Oak [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Westminster [Circle] to St. James's Park [Circle]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Bayswater [District] to Paddington [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Blackfriars [District] to Temple [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Cannon Street [District] to Mansion House [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Earls Court [District] to High Street Kensington [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Earls Court [District] to West Brompton [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Embankment [District] to Westminster [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Gloucester Road [District] to Earls Court [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: High Street Kensington [District] to Notting Hill Gate [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Mansion House [District] to Blackfriars [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Notting Hill Gate [District] to Bayswater [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Paddington [District] to Edgware Road [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Sloane Square [District] to South Kensington [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: South Kensington [District] to Gloucester Road [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: St. James's Park [District] to Victoria [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Temple [District] to Embankment [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Victoria [District] to Sloane Square [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Westminster [District] to St. James's Park [District]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Bond Street [Elizabeth] to Paddington [Elizabeth]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Farringdon [Elizabeth] to Tottenham Court Road [Elizabeth]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Tottenham Court Road [Elizabeth] to Bond Street [Elizabeth]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Baker Street [Hammersmith and City] to Great Portland Street [Hammersmith and City]
2023-07-13 23:29:07,796:DEBUG:root:connecting: Barbican [Hammersmith and City] to Moorgate [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Edgware Road [Hammersmith and City] to Baker Street [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Euston Square [Hammersmith and City] to Kings Cross St. Pancras [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Farringdon [Hammersmith and City] to Barbican [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Great Portland Street [Hammersmith and City] to Euston Square [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kings Cross St. Pancras [Hammersmith and City] to Farringdon [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Paddington [Hammersmith and City] to Edgware Road [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Royal Oak [Hammersmith and City] to Paddington [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Westbourne Park [Hammersmith and City] to Royal Oak [Hammersmith and City]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Baker Street [Jubilee] to Bond Street [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Bond Street [Jubilee] to Green Park [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Green Park [Jubilee] to Westminster [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: St. Johns Wood [Jubilee] to Baker Street [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Swiss Cottage [Jubilee] to St. Johns Wood [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Waterloo [Jubilee] to Southwark [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Westminster [Jubilee] to Waterloo [Jubilee]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Barbican [Metropolitan] to Farringdon [Metropolitan]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Euston Square [Metropolitan] to Great Portland Street [Metropolitan]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Farringdon [Metropolitan] to Kings Cross St. Pancras [Metropolitan]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Great Portland Street [Metropolitan] to Baker Street [Metropolitan]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kings Cross St. Pancras [Metropolitan] to Euston Square [Metropolitan]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Moorgate [Metropolitan] to Barbican [Metropolitan]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Angel [Northern] to Kings Cross St. Pancras [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Bank [Northern] to Moorgate [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Camden Town [Northern] to Chalk Farm [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Charing Cross [Northern] to Leicester Square [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Elephant and Castle [Northern] to Borough [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Embankment [Northern] to Charing Cross [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Euston [Northern] to Camden Town [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Euston [Northern] to Mornington Crescent [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Goodge Street [Northern] to Warren Street [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kennington [Northern] to Elephant and Castle [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kennington [Northern] to Waterloo [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kings Cross St. Pancras [Northern] to Euston [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Leicester Square [Northern] to Tottenham Court Road [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Moorgate [Northern] to Old Street [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Mornington Crescent [Northern] to Camden Town [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Old Street [Northern] to Angel [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Tottenham Court Road [Northern] to Goodge Street [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Warren Street [Northern] to Euston [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Waterloo [Northern] to Embankment [Northern]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Camden Road [Overground] to Caledonian Road and Barnsbury [Overground]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kilburn High Road [Overground] to South Hampstead [Overground]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Queens Park [Overground] to Kilburn High Road [Overground]
2023-07-13 23:29:07,797:DEBUG:root:connecting: South Hampstead [Overground] to Euston [Overground]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Covent Garden [Piccadilly] to Leicester Square [Piccadilly]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Gloucester Road [Piccadilly] to Earls Court [Piccadilly]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Green Park [Piccadilly] to Hyde Park Corner [Piccadilly]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Holborn [Piccadilly] to Covent Garden [Piccadilly]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Hyde Park Corner [Piccadilly] to Knightsbridge [Piccadilly]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Kings Cross St. Pancras [Piccadilly] to Russell Square [Piccadilly]
2023-07-13 23:29:07,797:DEBUG:root:connecting: Knightsbridge [Piccadilly] to South Kensington [Piccadilly]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Leicester Square [Piccadilly] to Piccadilly Circus [Piccadilly]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Piccadilly Circus [Piccadilly] to Green Park [Piccadilly]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Russell Square [Piccadilly] to Holborn [Piccadilly]
2023-07-13 23:29:07,798:DEBUG:root:connecting: South Kensington [Piccadilly] to Gloucester Road [Piccadilly]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Euston [Victoria] to Warren Street [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Green Park [Victoria] to Victoria [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Kings Cross St. Pancras [Victoria] to Euston [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Oxford Circus [Victoria] to Green Park [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Pimlico [Victoria] to Vauxhall [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Victoria [Victoria] to Pimlico [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Warren Street [Victoria] to Oxford Circus [Victoria]
2023-07-13 23:29:07,798:DEBUG:root:connecting: Waterloo [Waterloo and City] to Bank [Waterloo and City]
2023-07-13 23:29:08,093:DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-07-13 23:29:08,093:DEBUG:matplotlib.pyplot:Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,095:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AppleSDGothicNeo.ttc', name='Apple SD Gothic Neo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansImperialAramaic-Regular.ttf', name='Noto Sans Imperial Aramaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SnellRoundhand.ttc', name='Snell Roundhand', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-Book.otf', name='Operator Mono', style='normal', variant='normal', weight=325, stretch='normal', size='scalable')) = 10.12125
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYork.ttf', name='.New York', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiTham-Regular.ttf', name='Noto Sans Tai Tham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSiddham-Regular.ttf', name='Noto Sans Siddham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifAhom-Regular.ttf', name='Noto Serif Ahom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Krungthep.ttf', name='Krungthep', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerifCaption.ttc', name='PT Serif Caption', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/GeezaPro.ttc', name='Geeza Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTakri-Regular.ttf', name='Noto Sans Takri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewa-Regular.ttf', name='Noto Sans Newa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansUgaritic-Regular.ttf', name='Noto Sans Ugaritic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi Sangam MN.ttc', name='Gurmukhi Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Herculanum.ttf', name='Herculanum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Rockwell.ttc', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCarian-Regular.ttf', name='Noto Sans Carian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearB-Regular.ttf', name='Noto Sans Linear B', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCoptic-Regular.ttf', name='Noto Sans Coptic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorBangla.ttc', name='Kohinoor Bangla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu Sangam MN.ttc', name='Telugu Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bradley Hand Bold.ttf', name='Bradley Hand', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AlBayan.ttc', name='Al Bayan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifBalinese-Regular.ttf', name='Noto Serif Balinese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ThonburiUI.ttc', name='.ThonburiUI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDBol.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-LightItalic.otf', name='Operator Mono', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Kohinoor.ttc', name='Kohinoor Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/EuphemiaCAS.ttc', name='Euphemia UCAS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-ExtraLightItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=275, stretch='normal', size='scalable')) = 11.16875
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farisi.ttf', name='Farisi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifYezidi-Regular.otf', name='Noto Serif Yezidi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,096:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAdlam-Regular.ttf', name='Noto Sans Adlam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-Light.otf', name='Operator Mono', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagbanwa-Regular.ttf', name='Noto Sans Tagbanwa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Ayuthaya.ttf', name='Ayuthaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorTelugu.ttc', name='Kohinoor Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMahajani-Regular.ttf', name='Noto Sans Mahajani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W6.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-SemiboldItalic.otf', name='SF Mono', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLimbu-Regular.ttf', name='Noto Sans Limbu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabicRounded.ttf', name='.SF Arabic Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpReg.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMongolian-Regular.ttf', name='Noto Sans Mongolian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Hiragino Sans GB.ttc', name='Hiragino Sans GB', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGothic-Regular.ttf', name='Noto Sans Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymBol.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-MediumItalic.otf', name='SF Mono', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSerifNyiakengPuachueHmong-Regular.ttf', name='Noto Serif Hmong Nyiakeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Palatino.ttc', name='Palatino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DecoTypeNaskh.ttc', name='DecoType Naskh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Silom.ttf', name='Silom', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala Sangam MN.ttc', name='Sinhala Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHatran-Regular.ttf', name='Noto Sans Hatran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam Sangam MN.ttc', name='Malayalam Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUni.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-BoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Monaco.ttf', name='Monaco', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kailasa.ttc', name='Kailasa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Damascus.ttc', name='Damascus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNS.ttf', name='System Font', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKayahLi-Regular.ttf', name='Noto Sans Kayah Li', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalParthian-Regular.ttf', name='Noto Sans Inscriptional Parthian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText.ttf', name='STIX Two Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansAvestan-Regular.ttf', name='Noto Sans Avestan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada MN.ttc', name='Kannada MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCypriot-Regular.ttf', name='Noto Sans Cypriot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Academy Engraved LET Fonts.ttf', name='Academy Engraved LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSundanese-Regular.ttf', name='Noto Sans Sundanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Phosphate.ttc', name='Phosphate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBassaVah-Regular.ttf', name='Noto Sans Bassa Vah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Waseem.ttc', name='Waseem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhagsPa-Regular.ttf', name='Noto Sans PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/KohinoorGujarati.ttc', name='Kohinoor Gujarati', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kokonor.ttf', name='Kokonor', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-LightItalic.otf', name='SF Mono', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLinearA-Regular.ttf', name='Noto Sans Linear A', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiViet-Regular.ttf', name='Noto Sans Tai Viet', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/BigCaslon.ttf', name='Big Caslon', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W3.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFArabic.ttf', name='.SF Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ZapfDingbats.ttf', name='Zapf Dingbats', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W1.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W0.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Bold.ttf', name='Montserrat', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Brush Script.ttf', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Light.ttc', name='Heiti TC', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSRounded.ttf', name='.SF NS Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Savoye LET.ttc', name='Savoye LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeeteiMayek-Regular.ttf', name='Noto Sans Meetei Mayek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansInscriptionalPahlavi-Regular.ttf', name='Noto Sans Inscriptional Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-LightItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2023-07-13 23:29:08,097:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntDReg.otf', name='STIXIntegralsD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpBol.otf', name='STIXIntegralsUp', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Skia.ttf', name='Skia', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLydian-Regular.ttf', name='Noto Sans Lydian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansManichaean-Regular.ttf', name='Noto Sans Manichaean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W8.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 OS.ttc', name='Bodoni 72 Oldstyle', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AmericanTypewriter.ttc', name='American Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSylotiNagri-Regular.ttf', name='Noto Sans Syloti Nagri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Keyboard.ttf', name='.Keyboard', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhojki-Regular.ttf', name='Noto Sans Khojki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text Ornaments.ttf', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Italic.ttf', name='Montserrat', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-BlackItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBolIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next Condensed.ttc', name='Avenir Next Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir Next.ttc', name='Avenir Next', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansVai-Regular.ttf', name='Noto Sans Vai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Helvetica.ttc', name='Helvetica', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.322727272727273
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSerifMyanmar.ttc', name='Noto Serif Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Athelas.ttc', name='Athelas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBrahmi-Regular.ttf', name='Noto Sans Brahmi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi.ttf', name='Gurmukhi MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Thonburi.ttc', name='Thonburi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansModi-Regular.ttf', name='Noto Sans Modi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompact.ttf', name='.SF Compact', style='normal', variant='normal', weight=1000, stretch='normal', size='scalable')) = 10.62
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 2.ttf', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-Medium.otf', name='Operator Mono', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow.ttf', name='Arial Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 8 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKaithi-Regular.ttf', name='Noto Sans Kaithi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactItalic.ttf', name='.SF Compact', style='italic', variant='normal', weight=1000, stretch='normal', size='scalable')) = 11.62
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sana.ttc', name='Sana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PlantagenetCherokee.ttf', name='Plantagenet Cherokee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansEgyptianHieroglyphs-Regular.ttf', name='Noto Sans Egyptian Hieroglyphs', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gurmukhi MN.ttc', name='Gurmukhi MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Courier.ttc', name='Courier', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi Gold.ttf', name='Mishafi Gold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPermic-Regular.ttf', name='Noto Sans Old Permic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Thuluth.ttf', name='Diwan Thuluth', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya Sangam MN.ttc', name='Oriya Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDReg.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sathu.ttf', name='Sathu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao Sangam MN.ttf', name='Lao Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Sinhala MN.ttc', name='Sinhala MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLycian-Regular.ttf', name='Noto Sans Lycian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkduster.ttf', name='Chalkduster', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Didot.ttc', name='Didot', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tahoma Bold.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVarBol.otf', name='STIXVariants', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmReg.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTirhuta-Regular.ttf', name='Noto Sans Tirhuta', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanunoo-Regular.ttf', name='Noto Sans Hanunoo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniIta.otf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W5.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBol.otf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-HeavyItalic.otf', name='SF Mono', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOlChiki-Regular.ttf', name='Noto Sans Ol Chiki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla Sangam MN.ttc', name='Bangla Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFCompactRounded.ttf', name='.SF Compact Rounded', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,098:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMiao-Regular.ttf', name='Noto Sans Miao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-BoldItalic.otf', name='Operator Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmReg.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-Bold.otf', name='SF Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MarkerFelt.ttc', name='Marker Felt', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Light.ttf', name='Montserrat', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NewYorkItalic.ttf', name='.New York', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baskerville.ttc', name='Baskerville', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Pinpoint 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansOriya.ttc', name='Noto Sans Oriya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Microsoft Sans Serif.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Andale Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer Sangam MN.ttf', name='Khmer Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymBol.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-Medium.otf', name='SF Mono', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansChakma-Regular.ttf', name='Noto Sans Chakma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMro-Regular.ttf', name='Noto Sans Mro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNewTaiLue-Regular.ttf', name='Noto Sans New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Papyrus.ttc', name='Papyrus', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWancho-Regular.ttf', name='Noto Sans Wancho', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/HelveticaNeue.ttc', name='Helvetica Neue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W2.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizOneSymReg.otf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Library/Fonts/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GujaratiMT.ttc', name='Gujarati MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Beirut.ttc', name='Beirut', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72 Smallcaps Book.ttf', name='Bodoni 72 Smallcaps', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Bold Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-Regular.otf', name='SF Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Futura.ttc', name='Futura', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldItalic-Regular.ttf', name='Noto Sans Old Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Georgia Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMeroitic-Regular.ttf', name='Noto Sans Meroitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni 72.ttc', name='Bodoni 72', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFiveSymReg.otf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Muna.ttc', name='Muna', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymBol.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SignPainter.ttc', name='SignPainter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Gujarati Sangam MN.ttc', name='Gujarati Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SukhumvitSet.ttc', name='Sukhumvit Set', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoText-Italic.ttf', name='STIX Two Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleGothic.ttf', name='AppleGothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-SemiBold.ttf', name='Montserrat', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSans.ttc', name='PT Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-XLightItalic.otf', name='Operator Mono', style='italic', variant='normal', weight=275, stretch='normal', size='scalable')) = 11.16875
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSamaritan-Regular.ttf', name='Noto Sans Samaritan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Lao MN.ttc', name='Lao MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-Bold.otf', name='Operator Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-ExtraLight.ttf', name='Montserrat', style='normal', variant='normal', weight=275, stretch='normal', size='scalable')) = 10.16875
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsage-Regular.ttf', name='Noto Sans Osage', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNKo-Regular.ttf', name='Noto Sans NKo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMultani-Regular.ttf', name='Noto Sans Multani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMandaic-Regular.ttf', name='Noto Sans Mandaic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMendeKikakui-Regular.ttf', name='Noto Sans Mende Kikakui', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCham-Regular.ttf', name='Noto Sans Cham', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuginese-Regular.ttf', name='Noto Sans Buginese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,099:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mishafi.ttf', name='Mishafi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-ExtraBoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=800, stretch='normal', size='scalable')) = 11.43
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-BookItalic.otf', name='Operator Mono', style='italic', variant='normal', weight=325, stretch='normal', size='scalable')) = 11.12125
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Iowan Old Style.ttc', name='Iowan Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymBol.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold.ttf', name='Arial Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansRejang-Regular.ttf', name='Noto Sans Rejang', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoNastaliq.ttc', name='Noto Nastaliq Urdu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W9.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Times New Roman Bold Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansLepcha-Regular.ttf', name='Noto Sans Lepcha', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXVar.otf', name='STIXVariants', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSoraSompeng-Regular.ttf', name='Noto Sans Sora Sompeng', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Thin.ttf', name='Montserrat', style='normal', variant='normal', weight=250, stretch='normal', size='scalable')) = 10.1925
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpSmBol.otf', name='STIXIntegralsUpSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Cochin.ttc', name='Cochin', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ArialHB.ttc', name='Arial Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ChalkboardSE.ttc', name='Chalkboard SE', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Songti.ttc', name='Songti SC', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Braille Outline 6 Dot.ttf', name='Apple Braille', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKhudawadi-Regular.ttf', name='Noto Sans Khudawadi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-RegularItalic.otf', name='SF Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBamum-Regular.ttf', name='Noto Sans Bamum', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W7.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil MN.ttc', name='Tamil MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntSmBol.otf', name='STIXIntegralsSm', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Wingdings 3.ttf', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSyriac-Regular.ttf', name='Noto Sans Syriac', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/InaiMathi-MN.ttc', name='InaiMathi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPahawhHmong-Regular.ttf', name='Noto Sans Pahawh Hmong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPhoenician-Regular.ttf', name='Noto Sans Phoenician', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Regular.ttf', name='Montserrat', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Charter.ttc', name='Charter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldSouthArabian-Regular.ttf', name='Noto Sans Old South Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Optima.ttc', name='Optima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Shree714.ttc', name='Shree Devanagari 714', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldNorthArabian-Regular.ttf', name='Noto Sans Old North Arabian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-Semibold.otf', name='SF Mono', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPauCinHau-Regular.ttf', name='Noto Sans Pau Cin Hau', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Hoefler Text.ttc', name='Hoefler Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Times.ttc', name='Times', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Zapfino.ttf', name='Zapfino', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NewPeninimMT.ttc', name='New Peninim MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/STHeiti Medium.ttc', name='Heiti TC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar Sangam MN.ttc', name='Myanmar Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-SemiBoldItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizThreeSymReg.otf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-MediumItalic.otf', name='Operator Mono', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Farah.ttc', name='Farah', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Raanana.ttc', name='Raanana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/AppleMyungjo.ttf', name='AppleMyungjo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansKannada.ttc', name='Noto Sans Kannada', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/KufiStandardGK.ttc', name='KufiStandardGK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOsmanya-Regular.ttf', name='Noto Sans Osmanya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Baghdad.ttc', name='Baghdad', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Unicode.ttf', name='Arial Unicode MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXIntUpDBol.otf', name='STIXIntegralsUpD', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,100:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTaiLe-Regular.ttf', name='Noto Sans Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Myanmar MN.ttc', name='Myanmar MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DevanagariMT.ttc', name='Devanagari MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Chalkboard.ttc', name='Chalkboard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-Heavy.otf', name='SF Mono', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-BoldItalic.otf', name='SF Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCuneiform-Regular.ttf', name='Noto Sans Cuneiform', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/SuperClarendon.ttc', name='Superclarendon', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/OperatorMono-XLight.otf', name='Operator Mono', style='normal', variant='normal', weight=275, stretch='normal', size='scalable')) = 10.16875
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldPersian-Regular.ttf', name='Noto Sans Old Persian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansDuployan-Regular.ttf', name='Noto Sans Duployan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/GillSans.ttc', name='Gill Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Menlo.ttc', name='Menlo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Courier New Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTMono.ttc', name='PT Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Apple Symbols.ttf', name='Apple Symbols', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGunjalaGondi-Regular.otf', name='Noto Sans Gunjala Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Alternate Bold.ttf', name='DIN Alternate', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansJavanese-Regular.otf', name='Noto Sans Javanese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Nadeem.ttc', name='Nadeem', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Khmer MN.ttc', name='Khmer MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralItalic.otf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneralBolIta.otf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Geneva.ttf', name='Geneva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.595454545454545
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Devanagari Sangam MN.ttc', name='Devanagari Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSItalic.ttf', name='System Font', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ丸ゴ ProN W4.ttc', name='Hiragino Maru Gothic Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Tamil Sangam MN.ttc', name='Tamil Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Tarikh.ttc', name='Al Tarikh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/SFMono-Light.otf', name='SF Mono', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bangla MN.ttc', name='Bangla MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansHanifiRohingya-Regular.ttf', name='Noto Sans Hanifi Rohingya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/PingFang.ttc', name='PingFang HK', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBhaiksuki-Regular.ttf', name='Noto Sans Bhaiksuki', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Copperplate.ttc', name='Copperplate', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPalmyrene-Regular.ttf', name='Noto Sans Palmyrene', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/AquaKana.ttc', name='.Aqua Kana', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Luminari.ttf', name='Luminari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBuhid-Regular.ttf', name='Noto Sans Buhid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Corsiva.ttc', name='Corsiva Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kefa.ttc', name='Kefa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Kannada Sangam MN.ttc', name='Kannada Sangam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Narrow Bold Italic.ttf', name='Arial Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Comic Sans MS Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansMyanmar.ttc', name='Noto Sans Myanmar', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Galvji.ttc', name='Galvji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,101:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMasaramGondi-Regular.otf', name='Noto Sans Masaram Gondi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMonoItalic.ttf', name='.SF NS Mono', style='italic', variant='normal', weight=295, stretch='normal', size='scalable')) = 11.14975
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansKharoshthi-Regular.ttf', name='Noto Sans Kharoshthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Bodoni Ornaments.ttf', name='Bodoni Ornaments', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Medium.ttf', name='Montserrat', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Apple Chancery.ttf', name='Apple Chancery', style='normal', variant='normal', weight=0, stretch='normal', size='scalable')) = 10.43
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Seravek.ttc', name='Seravek', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/DIN Condensed Bold.ttf', name='DIN Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldTurkic-Regular.ttf', name='Noto Sans Old Turkic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Rounded Bold.ttf', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-Black.ttf', name='Montserrat', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXGeneral.otf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-MediumItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ明朝 ProN.ttc', name='Hiragino Mincho ProN', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansOldHungarian-Regular.ttf', name='Noto Sans Old Hungarian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-ExtraBold.ttf', name='Montserrat', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCanadianAboriginal-Regular.otf', name='Noto Sans Canadian Aboriginal', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansCaucasianAlbanian-Regular.ttf', name='Noto Sans Caucasian Albanian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXNonUniBol.otf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/ITFDevanagari.ttc', name='ITF Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Diwan Kufi.ttc', name='Diwan Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansGlagolitic-Regular.ttf', name='Noto Sans Glagolitic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizTwoSymReg.otf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trebuchet MS Bold Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansPsalterPahlavi-Regular.ttf', name='Noto Sans Psalter Pahlavi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Telugu MN.ttc', name='Telugu MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTifinagh-Regular.ttf', name='Noto Sans Tifinagh', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PTSerif.ttc', name='PT Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansWarangCiti-Regular.ttf', name='Noto Sans Warang Citi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/LucidaGrande.ttc', name='Lucida Grande', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 2.872272727272727
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Malayalam MN.ttc', name='Malayalam MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansElbasan-Regular.ttf', name='Noto Sans Elbasan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Mshtakan.ttc', name='Mshtakan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/MuktaMahee.ttc', name='Mukta Mahee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Marion.ttc', name='Marion', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansThaana-Regular.ttf', name='Noto Sans Thaana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXSizFourSymReg.otf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Black.ttf', name='Arial Black', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/SFNSMono.ttf', name='.SF NS Mono', style='normal', variant='normal', weight=295, stretch='normal', size='scalable')) = 10.14975
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSharada-Regular.ttf', name='Noto Sans Sharada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/STIXTwoMath.otf', name='STIX Two Math', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansSaurashtra-Regular.ttf', name='Noto Sans Saurashtra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/ヒラギノ角ゴシック W4.ttc', name='Hiragino Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansMarchen-Regular.ttf', name='Noto Sans Marchen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Avenir.ttc', name='Avenir', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/PartyLET-plain.ttf', name='Party LET', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansTagalog-Regular.ttf', name='Noto Sans Tagalog', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansBatak-Regular.ttf', name='Noto Sans Batak', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansYi-Regular.ttf', name='Noto Sans Yi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Arial Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Noteworthy.ttc', name='Noteworthy', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/Users/wray/Library/Fonts/Montserrat-ThinItalic.ttf', name='Montserrat', style='italic', variant='normal', weight=250, stretch='normal', size='scalable')) = 11.1925
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/NotoSansArmenian.ttc', name='Noto Sans Armenian', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2023-07-13 23:29:08,102:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Trattatello.ttf', name='Trattatello', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,103:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Al Nile.ttc', name='Al Nile', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,103:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/NotoSansNabataean-Regular.ttf', name='Noto Sans Nabataean', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,103:DEBUG:matplotlib.font_manager:findfont: score(FontEntry(fname='/System/Library/Fonts/Supplemental/Oriya MN.ttc', name='Oriya MN', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2023-07-13 23:29:08,103:DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/wray/miniforge3/envs/ox/lib/python3.11/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
